Plan=Plan||{},Plan.redux=Plan.redux||{},Plan.redux.ActionCreator=function(t){this.store=t},Plan.redux.ActionCreator.prototype.changeYearAction=function(t){if(4!==t.length||!parseInt(t,10))return{type:"ERROR_INVALID",payload:new Error("Invalid Year"),error:!0};var e=this.store.getState().plan.userData.birthday,a=Plan.utils.getContractAge({year:t,month:e.month,date:e.date},new Date);return(a<__LN_PLAN_VALID_AGE_START||__LN_PLAN_VALID_AGE_END<a)&&(e.month=""),{type:"CHANGE_YEAR",payload:t}},Plan.redux.ActionCreator.prototype.changeMonthAction=function(t){var e=parseInt(t,10);if(e<1||12<e)return{type:"ERROR_INVALID",payload:new Error("Invalid Month"),error:!0};var a=this.store.getState().plan.userData.birthday;a.month=t;var n=Plan.utils.getContractAge({year:a.year,month:t,date:a.date},new Date);return(n<__LN_PLAN_VALID_AGE_START||__LN_PLAN_VALID_AGE_END<n)&&(a.date=""),{type:"CHANGE_MONTH",payload:t}},Plan.redux.ActionCreator.prototype.changeDateAction=function(t){var e=parseInt(t,10);if(e<1||31<e)return{type:"ERROR_INVALID",payload:new Error("Invalid Date"),error:!0};var a=this.store.getState().plan.userData.birthday;a.date=t;var n=Plan.utils.getContractAge({year:a.year,month:a.month,date:t},new Date);return n<__LN_PLAN_VALID_AGE_START||__LN_PLAN_VALID_AGE_END<n?{type:"ERROR_INVALID",payload:new Error("Invalid Date"),error:!0}:{type:"CHANGE_DATE",payload:t}},Plan.redux.ActionCreator.prototype.changeGenderAction=function(t){return Plan.params.validators.isValidGender(t)?{type:"CHANGE_GENDER",payload:t}:{type:"ERROR_INVALID",payload:new Error("Invalid Gender"),error:!0}},Plan.redux.ActionCreator.prototype.changeAgeAction=function(t){var e=parseInt(t,10);return e<__LN_PLAN_VALID_AGE_START||__LN_PLAN_VALID_AGE_END<e?{type:"ERROR_INVALID",payload:new Error("Invalid Age"),error:!0}:{type:"CHANGE_AGE",payload:t}},Plan.redux.ActionCreator.prototype.changeContractDateAction=function(t){return 8!==t.length?{type:"ERROR_INVALID",payload:new Error("Invalid ContractDate"),error:!0}:{type:"CHANGE_CONTRACTDATE",payload:t}},Plan.redux.ActionCreator.prototype.changeDisabilityActivatorAction=function(t){return"TRUE"!==t&&"FALSE"!==t?{type:"ERROR_INVALID",payload:new Error("Invalid DisabilityActivator"),error:!0}:{type:"CHANGE_DISABILITY_ACTIVATOR",payload:t}},Plan.redux.ActionCreator.prototype.changeDisabilityBenefitAction=function(t){return Plan.params.validators.isValidDisabilityBenefit(t)?{type:"CHANGE_DISABILITY_BENEFIT",payload:t}:{type:"ERROR_INVALID",payload:new Error("Invalid DisabilityBenefit"),error:!0}},Plan.redux.ActionCreator.prototype.changeDisabilityBillableAction=function(t){return Plan.params.validators.isValidDisabilityBillable(t)?{type:"CHANGE_DISABILITY_BILLABLE",payload:t}:{type:"ERROR_INVALID",payload:new Error("Invalid DisabilityBillable"),error:!0}},Plan.redux.ActionCreator.prototype.changeDisabilityOptionAction=function(t){return Plan.params.validators.isValidDisabilityOption(t)?{type:"CHANGE_DISABILITY_OPTION",payload:t}:{type:"ERROR_INVALID",payload:new Error("Invalid DisabilityOption"),error:!0}},Plan.redux.ActionCreator.prototype.changeDisabilityTermAction=function(t){var e=this.store.getState().plan.userData.contractage.value;return Plan.params.validators.isValidDisabilityTerm(t,e)?{type:"CHANGE_DISABILITY_TERM",payload:t}:{type:"ERROR_INVALID",payload:new Error("Invalid DisabilityTerm"),error:!0}},Plan.redux.ActionCreator.prototype.changeDisabilityCostAction=function(t){return parseInt(t,10)?{type:"CHANGE_DISABILITY_COST",payload:t}:{type:"ERROR_INVALID",payload:new Error("Invalid DisabilityCost"),error:!0}},Plan.redux.ActionCreator.prototype.changeLifeActivatorAction=function(t){return"TRUE"!==t&&"FALSE"!==t?{type:"ERROR_INVALID",payload:new Error("Invalid LifeActivator"),error:!0}:{type:"CHANGE_LIFE_ACTIVATOR",payload:t}},Plan.redux.ActionCreator.prototype.changeLifeInsuranceAction=function(t){return Plan.params.validators.isValidLifeInsurance(t)?{type:"CHANGE_LIFE_INSURANCE",payload:t}:{type:"ERROR_INVALID",payload:new Error("Invalid LifeInsurance"),error:!0}},Plan.redux.ActionCreator.prototype.changeLifeTermAction=function(t){var e=this.store.getState().plan.userData.contractage.value;return Plan.params.validators.isValidLifeTerm(t,e)?{type:"CHANGE_LIFE_TERM",payload:t}:{type:"ERROR_INVALID",payload:new Error("Invalid LifeTerm"),error:!0}},Plan.redux.ActionCreator.prototype.changeLifeCostAction=function(t){return parseInt(t,10)?{type:"CHANGE_LIFE_COST",payload:t}:{type:"ERROR_INVALID",payload:new Error("Invalid LifeCost"),error:!0}},Plan.redux.ActionCreator.prototype.changeMedicalActivatorAction=function(t){return"TRUE"!==t&&"FALSE"!==t?{type:"ERROR_INVALID",payload:new Error("Invalid MedicalActivator"),error:!0}:{type:"CHANGE_MEDICAL_ACTIVATOR",payload:t}},Plan.redux.ActionCreator.prototype.changeMedicalAdmissionAction=function(t){return Plan.params.validators.isValidMedicalAdmission(t)?{type:"CHANGE_MEDICAL_ADMISSION",payload:t}:{type:"ERROR_INVALID",payload:new Error("Invalid MedicalAdmission"),error:!0}},Plan.redux.ActionCreator.prototype.changeMedicalCourseAction=function(t){var e=this.store.getState().plan,a=e.userData.sex;return Plan.params.validators.isValidMedicalCourse(t,a,e)?{type:"CHANGE_MEDICAL_COURSE",payload:t}:{type:"ERROR_INVALID",payload:new Error("Invalid MedicalCourse"),error:!0}},Plan.redux.ActionCreator.prototype.changeMedicalPaymentAction=function(t){var e=this.store.getState().plan.userData.contractage.value;return Plan.params.validators.isValidMedicalPayment(t,e)?{type:"CHANGE_MEDICAL_PAYMENT",payload:t}:{type:"ERROR_INVALID",payload:new Error("Invalid MedicalPayment"),error:!0}},Plan.redux.ActionCreator.prototype.changeMedicalCostAction=function(t){return parseInt(t,10)?{type:"CHANGE_MEDICAL_COST",payload:t}:{type:"ERROR_INVALID",payload:new Error("Invalid MedicalCost"),error:!0}},Plan.redux.ActionCreator.prototype.changeTreatmentActivatorAction=function(t){var e=this.store.getState().plan;return Plan.params.validators.isValidTreatmentActivator(t,e)?{type:"CHANGE_TREATMENT_ACTIVATOR",payload:t}:{type:"ERROR_INVALID",payload:new Error("Invalid TreatmentActivator"),error:!0}},Plan.redux.ActionCreator.prototype.changeTreatmentTermAction=function(t){return Plan.params.validators.isValidTreatmentTerm(t)?{type:"CHANGE_TREATMENT_TERM",payload:t}:{type:"ERROR_INVALID",payload:new Error("Invalid TreatmentTerm"),error:!0}},Plan.redux.ActionCreator.prototype.changeTreatmentCostAction=function(t){return parseInt(t,10)?{type:"CHANGE_TREATMENT_COST",payload:t}:{type:"ERROR_INVALID",payload:new Error("Invalid TreatmentCost"),error:!0}},Plan.redux.ActionCreator.prototype.changeCancerActivatorAction=function(t){return"TRUE"!==t&&"FALSE"!==t?{type:"ERROR_INVALID",payload:new Error("Invalid CancerActivator"),error:!0}:{type:"CHANGE_CANCER_ACTIVATOR",payload:t}},Plan.redux.ActionCreator.prototype.changeCancerBenefitAction=function(t){return Plan.params.validators.isValidCancerBenefit(t)?{type:"CHANGE_CANCER_BENEFIT",payload:t}:{type:"ERROR_INVALID",payload:new Error("Invalid CancerBenefit"),error:!0}},Plan.redux.ActionCreator.prototype.changeCancerCourseAction=function(t){var e=this.store.getState().plan;return Plan.params.validators.isValidCancerCourse(t,e)?{type:"CHANGE_CANCER_COURSE",payload:t}:{type:"ERROR_INVALID",payload:new Error("Invalid CancerCourse"),error:!0}},Plan.redux.ActionCreator.prototype.changeCancerCostAction=function(t){return parseInt(t,10)?{type:"CHANGE_CANCER_COST",payload:t}:{type:"ERROR_INVALID",payload:new Error("Invalid CancerCost"),error:!0}},Plan.redux.ActionCreator.prototype.updateConditionsAction=function(){return{type:"UPDATE_CONDITIONS",payload:null}},function(t){function e(){var e=t("#multiplan_placeholder").data("include");e&&t.get(e,null,function(e){t("#multiplan_placeholder").html(e),a(),t(window).trigger("didStartApp",[Plan.params.all])},"text")}function a(){!function(e){t(window).trigger("willLoadParams",[e]);var a=Plan.params.updaters;a.applyDefaults(e),a.applyPageConfig(e,__LN_PLAN_PAGE_SPECIFIC_PARAMS_PRE),a.applyPersistentData(e),a.applyPageConfig(e,__LN_PLAN_PAGE_SPECIFIC_PARAMS_POST),a.applyHTTPParams(e);var n=t.cookie(Plan.utils.PERSISTENT_KEY);!n&&Plan.device.isSmartphone&&(n=t.cookie(Plan.utils.PERSISTENT_KEY_OLD_SPH)),n&&""!==n||Plan.config.main&&Plan.config.main.conditionalDefault&&(Plan.redux.requireConditionalDefault=!0),t(window).trigger("didLoadParams",[e])}(Plan.params.all);var e=new Plan.redux.Store(new Plan.redux.Reducer,{plan:Plan.params.all}),a=new Plan.redux.ActionCreator(e),n=new Plan.redux.Component(e,a);Plan.redux.reg={},Plan.redux.reg.store=e,Plan.redux.reg.actionCreator=a,e.dispatch(a.updateConditionsAction());var i=e.getState().plan;Plan.redux.utils.canEstimate(i)&&(n.onStart(),Plan.redux.utils.updateEstimate(i))}t(function(){t(window).trigger("willStartApp",[Plan.params.all]),e()})}(jQuery),Plan.redux.utils=Plan.redux.utils||{},Plan.redux.utils.canEstimate=function(t){if(__LN_PLAN_SELECT_BIRTHDAY){var e=t.userData.birthday;if(void 0===e.year||void 0===e.month||void 0===e.date)return!1;if(4!==e.year.length)return!1;var a=parseInt(e.month,10);if(a<1||12<a)return!1;var n=parseInt(e.date,10);if(n<1||31<n)return!1}var i=parseInt(t.userData.contractage.value,10),r=t.userData.sex;return 20<=i&&i<=70&&("male"===r||"female"===r)},Plan.redux.utils.updateEstimate=function(t){function e(t){var e=c.getState().plan;a(e,t),n(e,t),i(e,t),r(e,t),o(e,t)}function a(t,e){var a=t.fields.life.condition.insurance,n=t.fields.life.condition.term,i=Plan.apis.findLifeCost(e,a,n)||"-";c.dispatch(d.changeLifeCostAction(i))}function n(t,e){var a=t.fields.medical2.condition.admission,n=t.fields.medical2.condition.payment,i=t.fields.medical2.condition.course,r=Plan.apis.findMedical2Cost(e,a,i,n)||"-";c.dispatch(d.changeMedicalCostAction(r))}function i(t,e){var a=t.fields.disability.condition.benefit,n=t.fields.disability.condition.billable,i=t.fields.disability.condition.option,r=t.fields.disability.condition.term,o=Plan.apis.findDisability2Cost(e,a,n,i,r)||"-";c.dispatch(d.changeDisabilityCostAction(o))}function r(t,e){var a=t.fields.treatment.condition.term,n=Plan.apis.findTreatmentCost(e,a)||"-";c.dispatch(d.changeTreatmentCostAction(n))}function o(t,e){var a=t.fields.cancer.condition.benefit,n=t.fields.cancer.condition.course,i=Plan.apis.findCancerCost(e,a,n)||"-";c.dispatch(d.changeCancerCostAction(i))}if(Plan.redux.utils.canEstimate(t)){$(window).trigger("willUpdateEstimate",[t]),Plan.redux.requireConditionalDefault&&(Plan.params.updaters.applyConditionalDefault(t,Plan.config.main.conditionalDefault),Plan.redux.requireConditionalDefault=!1,Plan.params.updaters.applyHTTPParams(t));var l,s,c=Plan.redux.reg.store,d=Plan.redux.reg.actionCreator,p=t.userData,u=p.contractage.value,h=p.sex;__LN_PLAN_SELECT_BIRTHDAY?(l=Plan.apis.invokeRateWithDOB,s=p.birthday):(l=Plan.apis.invokeRate,s=u),l(s,h,!0).then(function(a){e(a);var n=Plan.params.updaters.reducePersistentData(t);Plan.utils.savePersistentData(n),$(window).trigger("didUpdateEstimate",[t])},function(){$(window).trigger("rateAPIError",[t])})}},Plan.redux.utils.updateActivator=function(t,e,a,n){a?("TRUE"===n?t.prop("checked",!0):"FALSE"===n&&t.prop("checked",!1),t.prop("disabled",!1),t.prop("checked")?e.show():e.hide()):("TRUE"===n&&t.prop("checked",!1).change(),t.prop("disabled",!0),e.hide())},Plan.redux.CancerComponent=function(t,e){this.store=t,this.actionCreator=e,this.registerEventHandlers()},Plan.redux.CancerComponent.prototype.registerEventHandlers=function(){var t=this,e=Plan.redux.utils.updateEstimate,a=this.store.getState().plan;$("#cancer_activator").on("change",function(){$(this).is(":hidden")||(this.checked?t.store.dispatch(t.actionCreator.changeCancerActivatorAction("TRUE")):t.store.dispatch(t.actionCreator.changeCancerActivatorAction("FALSE")),e(a))}),$("#cancer_benefit").on("change",function(){t.store.dispatch(t.actionCreator.changeCancerBenefitAction($("#cancer_benefit").val())),e(a)}),$("#cancer_course").on("change",function(){t.store.dispatch(t.actionCreator.changeCancerCourseAction($("#cancer_course").val())),e(a)})},Plan.redux.CancerComponent.prototype.render=function(t){var e=t.plan,a=e.userData.contractage.value,n=(e.userData.sex,e.fields.cancer.condition);Plan.redux.utils.updateActivator($("#cancer_activator"),$("#cancer .conditions"),Plan.params.validators.isValidCancerAge(a),e.fields.cancer.activator),$("#cancer_benefit").val(n.benefit),function(){var t=Plan.params.constraint.getAvailableCancerCourseList(e);$("#cancer_course").children().each(function(){$(this).hide(),$(this).prop("disabled",!0);for(var e=0;e<t.length;e++)$(this).val()===t[e]&&($(this).show(),$(this).prop("disabled",!1))})}();var i=Plan.params.constraint.getFallbackCancerCourse(n.course,e);i!==n.course&&this.store.dispatch(this.actionCreator.changeCancerCourseAction(i)),$("#cancer_course").val(n.course),$("#cancer_cost").text(Plan.ui.formatNumber(String(n.cost)))},Plan=Plan||{},Plan.redux=Plan.redux||{},Plan.redux.Component=function(t,e){this.store=t,this.actionCreator=e,this.life=new Plan.redux.LifeComponent(t,e),this.medical=new Plan.redux.MedicalComponent(t,e),this.disability=new Plan.redux.DisabilityComponent(t,e),this.treatment=new Plan.redux.TreatmentComponent(t,e),this.cancer=new Plan.redux.CancerComponent(t,e),this.dobInput=new Plan.params.dobinput.DOBInput(new Date,__LN_PLAN_VALID_AGE_START,__LN_PLAN_VALID_AGE_END),this.initUI(),this.registerEventHandlers(),t.subscribe("CHANGE",function(t){return function(e){t.render(e)}}(this))},Plan.redux.Component.prototype.initUI=function(){if(__LN_PLAN_SELECT_BIRTHDAY=__LN_PLAN_SELECT_BIRTHDAY||!Plan.device.isSmartphone,__LN_PLAN_SELECT_BIRTHDAY){$("#dobBlock").show(),$("#dobBlock2").show(),$("#ageBlock").hide();var t=this.dobInput.getAvailableYearList(),e=Plan.ui.getYearSelectElement(t,!0,!0);$("#selectYear").append(e);var a=Plan.ui.getMonthSelectElement(!0);$("#selectMonth").append(a);var n=Plan.ui.getDateSelectElement(!0);$("#selectDate").append(n),this.onYearChange($("#selectYear select")),this.onMonthChange($("#selectMonth select"))}else $("#dobBlock").hide(),$("#dobBlock2").hide(),$("#ageBlock").show();!function(){if("undefined"!=typeof __LN_PLAN_PANELS)for(var t=0;t<__LN_PLAN_PANELS.length;t++){var e=__LN_PLAN_PANELS[t],a=$("#"+e.id);e.display?($("#products").append(a),a.show()):a.hide()}}(),function(t){!1===__LN_PLAN_SHOW_LINKS.backToTop.display?$("#backToTop").hide():$("#backToTop").off().click(function(){Plan.links.backToTop()}),!1===__LN_PLAN_SHOW_LINKS.proceedPlan.display?$("#proceedPlan").hide():$("#proceedPlan").off().click(function(){Plan.links.proceedPlan()}),!1===__LN_PLAN_SHOW_LINKS.consultLine.display?$("#consultLine").hide():$("#consultLine").off().click(function(){Plan.links.consultLine(t.store.getState().plan)}),!1===__LN_PLAN_SHOW_LINKS.consultPro.display?$("#consultPro").hide():$("#consultPro").off().click(function(){Plan.links.consultPro()}),!1===__LN_PLAN_SHOW_LINKS.requestCatalog.display?$("#requestCatalog").hide():$("#requestCatalog").off().click(function(){Plan.links.requestCatalog(t.store.getState().plan)}),!1===__LN_PLAN_SHOW_LINKS.sendPlanByMail.display?$("#sendPlanByMail").hide():$("#sendPlanByMail").off().click(function(){Plan.links.sendPlanByMail(t.store.getState().plan)})}(this)},Plan.redux.Component.prototype.onYearChange=function(t){var e=t.val(),a=this.dobInput.getAvailableMonthList(e);Plan.ui.updateMonthSelectElement($("#selectMonth select"),a);var n=$("#selectMonth select").val();if(n&&""!==n||$("#selectMonth select").val(a[0]).change(),n&&""!==n){var i=this.dobInput.getAvailableDateList(e,n);Plan.ui.updateDateSelectElement($("#selectDate select"),i);var r=$("#selectDate select").val();r&&""!==r||$("#selectDate select").val(i[0]).change()}},Plan.redux.Component.prototype.onMonthChange=function(t){var e=$("#selectYear select").val(),a=t.val(),n=this.dobInput.getAvailableDateList(e,a);Plan.ui.updateDateSelectElement($("#selectDate select"),n);var i=$("#selectDate select").val();i&&""!==i||$("#selectDate select").val(n[0]).change()},Plan.redux.Component.prototype.updateDOBSelectElement=function(t){var e=this.dobInput.getAvailableMonthList(t.year);Plan.ui.updateMonthSelectElement($("#selectMonth select"),e);var a=this.dobInput.getAvailableDateList(t.year,t.month);Plan.ui.updateDateSelectElement($("#selectDate select"),a)},Plan.redux.Component.prototype.registerEventHandlers=function(){function t(){r(o)&&(i(o),a())}function e(){var t=n.store.getState().plan.userData.sex;n.medical.applyGenderConstraint(t)}function a(){var t=n.store.getState().plan.userData.contractage.value;n.life.applyAgeConstraint(t),n.medical.applyAgeConstraint(t),n.disability.applyAgeConstraint(t)}var n=this,i=Plan.redux.utils.updateEstimate,r=Plan.redux.utils.canEstimate,o=this.store.getState().plan;__LN_PLAN_SELECT_BIRTHDAY?($("#selectYear select").on("change",function(){n.store.dispatch(n.actionCreator.changeYearAction(this.value)),n.onYearChange($(this)),t()}),$("#selectMonth select").on("change",function(){n.store.dispatch(n.actionCreator.changeMonthAction(this.value)),n.onMonthChange($(this)),t()}),$("#selectDate select").on("change",function(){n.store.dispatch(n.actionCreator.changeDateAction(this.value)),t()})):$("#age").on("change",function(){n.store.dispatch(n.actionCreator.changeAgeAction(this.value)),t()}),$("#gender input[name=gender]").on("change",function(){n.store.dispatch(n.actionCreator.changeGenderAction($("#gender input[name=gender]:checked").val())),i(o),e()}),$("#start").off().on("click",function(){$(window).trigger("willClickStart",[Plan.params.all]),t(),e(),n.onStart(),Plan.links.sendAnalytics("PLAN_START",o),$(window).trigger("didClickStart",[Plan.params.all])}),$("#edit").on("click",function(){$(window).trigger("willClickEdit",[Plan.params.all]),$("#editBlock").show(),$("#userConditionBlock").hide(),$(window).trigger("didClickEdit",[Plan.params.all])}),$("#proceedPlan").off().on("click",function(){Plan.links.proceedPlan()})},Plan.redux.Component.prototype.onStart=function(){var t=this,e=t.store.getState().plan;Plan.redux.utils.canEstimate(e)&&($("#editBlock").hide(),$("#userConditionBlock").show(),$("#products").show(),$("#result").show())},Plan.redux.Component.prototype.render=function(t){var e=this,a=t.plan;!function(t){var a=t.userData,n=a.birthday,i=a.contractage.value;$("#selectYear select").val(n.year),$("#selectMonth select").val(n.month),$("#selectDate select").val(n.date),e.updateDOBSelectElement(n),"male"===a.sex?$("#selectGenderMale").prop("checked",!0):"female"==a.sex&&$("#selectGenderFemale").prop("checked",!0),i&&$("#age").val(i),$("#year").text(n.year?n.year:"-"),$("#month").text(n.month?n.month:"-"),$("#date").text(n.date?n.date:"-"),$("#age2").text(i),$("#gender2").text(Plan.ui.l10n[a.sex])}(a),this.life.render(t),this.medical.render(t),this.disability.render(t),this.treatment.render(t),this.cancer.render(t),function(t){var e="TRUE"===t.fields.life.activator?parseInt(t.fields.life.condition.cost,10)||0:0,a="TRUE"===t.fields.medical2.activator?parseInt(t.fields.medical2.condition.cost,10)||0:0,n="TRUE"===t.fields.disability.activator?parseInt(t.fields.disability.condition.cost,10)||0:0,i="TRUE"===t.fields.treatment.activator?parseInt(t.fields.treatment.condition.cost,10)||0:0,r="TRUE"===t.fields.cancer.activator?parseInt(t.fields.cancer.condition.cost,10)||0:0,o=e+a+n+i+r,l=parseInt($("#total_cost").text().replace(",",""))||0;Plan.ui.animateCost(l,o,$("#total_cost"));var s=Plan.utils.getBirthdayAlertInfo(t,3);s.require?($("#birthdayAlertLimit1").text(s.limit1),$("#birthdayAlertLimit2").text(s.limit2),$("#birthdayAlert").show()):$("#birthdayAlert").hide(),$("#proceedPlan").prop("disabled",o<=0)}(a)},Plan.redux.DisabilityComponent=function(t,e){this.store=t,this.actionCreator=e,this.registerEventHandlers()},Plan.redux.DisabilityComponent.prototype.registerEventHandlers=function(){var t=this,e=Plan.redux.utils.updateEstimate,a=this.store.getState().plan;$("#disability_activator").on("change",function(){$(this).is(":hidden")||(this.checked?t.store.dispatch(t.actionCreator.changeDisabilityActivatorAction("TRUE")):t.store.dispatch(t.actionCreator.changeDisabilityActivatorAction("FALSE")),e(a))}),$("#benefit").on("change",function(){t.store.dispatch(t.actionCreator.changeDisabilityBenefitAction(this.value)),e(a)}),$("#billable").on("change",function(){t.store.dispatch(t.actionCreator.changeDisabilityBillableAction(this.value)),e(a)}),$("#option").on("change",function(){t.store.dispatch(t.actionCreator.changeDisabilityOptionAction($("#option").val())),e(a)}),$("#disability_term").on("change",function(){t.store.dispatch(t.actionCreator.changeDisabilityTermAction(this.value)),e(a)})},Plan.redux.DisabilityComponent.prototype.applyAgeConstraint=function(t){var e=this.store.getState().plan.fields.disability.condition.term,a=Plan.params.constraint.getFallbackDisabilityTerm(e,t);e!==a&&(this.store.dispatch(this.actionCreator.changeDisabilityTermAction(a)),Plan.redux.utils.updateEstimate(this.store.getState().plan))},Plan.redux.DisabilityComponent.prototype.render=function(t){var e=t.plan,a=e.userData.contractage.value,n=e.fields.disability.condition;Plan.redux.utils.updateActivator($("#disability_activator"),$("#disability .conditions"),Plan.params.validators.isValidDisabilityAge(a),e.fields.disability.activator),$("#benefit").val(n.benefit),$("#dis_admission").text(n.dis_admission),$("#billable").val(n.billable),$("#option").val(n.option),function(t){var e=Plan.params.constraint.getAvailableDisabilityTermList(t);$("#disability_term").children().each(function(){$(this).hide(),$(this).prop("disabled",!0);for(var t=0;t<e.length;t++)$(this).val()===e[t]&&($(this).show(),$(this).prop("disabled",!1))})}(a),$("#disability_term").val(n.term),$("#disability_cost").text(Plan.ui.formatNumber(String(n.cost)))},Plan.redux.LifeComponent=function(t,e){this.store=t,this.actionCreator=e,this.registerEventHandlers()},Plan.redux.LifeComponent.prototype.registerEventHandlers=function(){var t=this,e=Plan.redux.utils.updateEstimate,a=this.store.getState().plan;$("#life_activator").on("change",function(){$(this).is(":hidden")||(this.checked?t.store.dispatch(t.actionCreator.changeLifeActivatorAction("TRUE")):t.store.dispatch(t.actionCreator.changeLifeActivatorAction("FALSE")),e(a))}),$("#insurance").on("change",function(){t.store.dispatch(t.actionCreator.changeLifeInsuranceAction(this.value)),e(a)}),$("#term").on("change",function(){t.store.dispatch(t.actionCreator.changeLifeTermAction(this.value)),e(a)})},Plan.redux.LifeComponent.prototype.applyAgeConstraint=function(t){var e=this.store.getState().plan.fields.life.condition.term,a=Plan.params.constraint.getFallbackLifeTerm(e,t);e!==a&&(this.store.dispatch(this.actionCreator.changeLifeTermAction(a)),Plan.redux.utils.updateEstimate(this.store.getState().plan))},Plan.redux.LifeComponent.prototype.render=function(t){var e=t.plan,a=e.userData.contractage.value,n=e.fields.life.condition;Plan.redux.utils.updateActivator($("#life_activator"),$("#life .conditions"),Plan.params.validators.isValidLifeAge(a),e.fields.life.activator),$("#insurance").val(n.insurance),function(t){var e=Plan.params.constraint.getAvailableLifeTermList(t);$("#term").children().each(function(){$(this).hide(),$(this).prop("disabled",!0);for(var t=0;t<e.length;t++)$(this).val()===e[t]&&($(this).show(),$(this).prop("disabled",!1))})}(a),$("#term").val(n.term),$("#life_cost").text(Plan.ui.formatNumber(String(n.cost)))},Plan.redux.MedicalComponent=function(t,e){this.store=t,this.actionCreator=e,this.registerEventHandlers()},Plan.redux.MedicalComponent.prototype.registerEventHandlers=function(){var t=this,e=Plan.redux.utils.updateEstimate,a=this.store.getState().plan;$("#medical_activator").on("change",function(){$(this).is(":hidden")||(this.checked?t.store.dispatch(t.actionCreator.changeMedicalActivatorAction("TRUE")):t.store.dispatch(t.actionCreator.changeMedicalActivatorAction("FALSE")),e(a))}),$("#ladies").on("change",function(){"true"===$(this).val()?($("#selectCourse1").val("F1"),$("#selectCourse2").val("F2")):($("#selectCourse1").val("A1"),$("#selectCourse2").val("A2")),t.store.dispatch(t.actionCreator.changeMedicalCourseAction($("#course input[name=course]:checked").val())),e(a)}),$("#course input[name=course]").on("change",function(){t.store.dispatch(t.actionCreator.changeMedicalCourseAction($("#course input[name=course]:checked").val())),e(a)}),$("#admission").on("change",function(){t.store.dispatch(t.actionCreator.changeMedicalAdmissionAction(this.value)),e(a)}),$("#payment").on("change",function(){t.store.dispatch(t.actionCreator.changeMedicalPaymentAction(this.value)),e(a)})},Plan.redux.MedicalComponent.prototype.applyGenderConstraint=function(t){var e=this.store.getState().plan.fields.medical2.condition.course,a=Plan.params.constraint.getFallbackMedicalCourse(e,t);e!==a&&(this.store.dispatch(this.actionCreator.changeMedicalCourseAction(a)),Plan.redux.utils.updateEstimate(this.store.getState().plan))},Plan.redux.MedicalComponent.prototype.applyAgeConstraint=function(t){var e=this.store.getState().plan.fields.medical2.condition.payment,a=Plan.params.constraint.getFallbackMedicalPayment(e,t);e!==a&&(this.store.dispatch(this.actionCreator.changeMedicalPaymentAction(a)),Plan.redux.utils.updateEstimate(this.store.getState().plan))},Plan.redux.MedicalComponent.prototype.render=function(t){var e=t.plan,a=e.userData.contractage.value,n=e.userData.sex,i=e.fields.medical2.condition;Plan.redux.utils.updateActivator($("#medical_activator"),$("#medical .conditions"),Plan.params.validators.isValidMedicalAge(a),e.fields.medical2.activator);var r=Plan.params.constraint.getFallbackMedicalCourse(i.course,n,e);r!==i.course&&Plan.redux.utils.canEstimate(e)&&(this.store.dispatch(this.actionCreator.changeMedicalCourseAction(r)),Plan.redux.utils.updateEstimate(this.store.getState().plan)),"1"===i.course.slice(1,2)?$("#selectCourse1").prop("checked",!0):"2"===i.course.slice(1,2)&&$("#selectCourse2").prop("checked",!0),"female"===n?$("#ladiesBlock").show():$("#ladiesBlock").hide(),"female"===n&&"F"===i.course.slice(0,1)?($("#medical").addClass("female"),$("#medical").removeClass("male"),$("#selectCourse1").val("F1"),$("#selectCourse2").val("F2")):($("#ladies").val("false"),$("#medical").addClass("male"),$("#medical").removeClass("female"),$("#selectCourse1").val("A1"),$("#selectCourse2").val("A2")),$("#admission").val(i.admission),$("#admission2").text(Plan.ui.formatNumber(String(i.admission))+"円"),$("#ope_admission").text(parseInt(i.ope_admission,10)/1e4),function(t){var e=Plan.params.constraint.getAvailableMedicalPaymentList(t);$("#payment").children().each(function(){$(this).hide(),$(this).prop("disabled",!0);for(var t=0;t<e.length;t++)$(this).val()===e[t]&&($(this).show(),$(this).prop("disabled",!1))})}(a),$("#payment").val(i.payment),$("#medical_cost").text(Plan.ui.formatNumber(String(i.cost)))},Plan.redux.TreatmentComponent=function(t,e){this.store=t,this.actionCreator=e,this.registerEventHandlers()},Plan.redux.TreatmentComponent.prototype.registerEventHandlers=function(){var t=this,e=Plan.redux.utils.updateEstimate,a=this.store.getState().plan;$("#treatment_activator").on("change",function(){$(this).is(":hidden")||(this.checked?t.store.dispatch(t.actionCreator.changeTreatmentActivatorAction("TRUE")):t.store.dispatch(t.actionCreator.changeTreatmentActivatorAction("FALSE")),e(a))}),$("#treatment_term").on("change",function(){t.store.dispatch(t.actionCreator.changeTreatmentTermAction(this.value)),e(a)})},Plan.redux.TreatmentComponent.prototype.render=function(t){var e=t.plan,a=e.userData.contractage.value,n=e.fields.treatment.condition,i=Plan.params.validators.isValidTreatmentAge(a);Plan.params.constraint.isTreatmentAvailable(e)||(i=!1,"TRUE"===e.fields.treatment.activator&&(this.store.dispatch(this.actionCreator.changeTreatmentActivatorAction("FALSE")),Plan.redux.utils.updateEstimate(this.store.getState().plan))),Plan.redux.utils.updateActivator($("#treatment_activator"),$("#treatment .conditions"),i,e.fields.treatment.activator),$("#treatment_term").val(n.term),$("#treatment_cost").text(Plan.ui.formatNumber(String(n.cost)))},Plan=Plan||{},Plan.redux=Plan.redux||{},Plan.redux.Reducer=function(){},Plan.redux.Reducer.prototype.reduce=function(t,e){function a(t){var e=t.userData.birthday.year,a=t.userData.birthday.month,n=t.userData.birthday.date,i=t.userData.contractage.value;if(e&&a&&n&&(i=Plan.utils.getContractAge({year:e,month:a,date:n},new Date)),i){var r=t.userData.contractage;r.value=i,r.contractdate=Plan.utils.getContractDateString(new Date)}}var n=e,i=n.plan;switch(t.type){case"CHANGE_YEAR":i.userData.birthday.year=t.payload,a(i);break;case"CHANGE_MONTH":i.userData.birthday.month=t.payload,a(i);break;case"CHANGE_DATE":i.userData.birthday.date=t.payload,a(i);break;case"CHANGE_GENDER":i.userData.sex=t.payload;break;case"CHANGE_AGE":i.userData.birthday.year=void 0,i.userData.birthday.month=void 0,i.userData.birthday.date=void 0,i.userData.contractage.value=t.payload,a(i);break;case"CHANGE_DISABILITY_ACTIVATOR":i.fields.disability.activator=t.payload;break;case"CHANGE_DISABILITY_BENEFIT":i.fields.disability.condition.benefit=t.payload;break;case"CHANGE_DISABILITY_BILLABLE":i.fields.disability.condition.billable=t.payload;break;case"CHANGE_DISABILITY_OPTION":i.fields.disability.condition.option=t.payload;break;case"CHANGE_DISABILITY_TERM":i.fields.disability.condition.term=t.payload;break;case"CHANGE_DISABILITY_COST":i.fields.disability.condition.cost=t.payload;break;case"CHANGE_LIFE_ACTIVATOR":i.fields.life.activator=t.payload;break;case"CHANGE_LIFE_INSURANCE":i.fields.life.condition.insurance=t.payload;break;case"CHANGE_LIFE_TERM":i.fields.life.condition.term=t.payload;break;case"CHANGE_LIFE_COST":i.fields.life.condition.cost=t.payload;break;case"CHANGE_MEDICAL_ACTIVATOR":i.fields.medical2.activator=t.payload;break;case"CHANGE_MEDICAL_ADMISSION":i.fields.medical2.condition.admission=t.payload;break;case"CHANGE_MEDICAL_COURSE":i.fields.medical2.condition.course=t.payload;break;case"CHANGE_MEDICAL_PAYMENT":i.fields.medical2.condition.payment=t.payload;break;case"CHANGE_MEDICAL_COST":i.fields.medical2.condition.cost=t.payload;break;case"CHANGE_TREATMENT_ACTIVATOR":i.fields.treatment.activator=t.payload;break;case"CHANGE_TREATMENT_TERM":i.fields.treatment.condition.term=t.payload;break;case"CHANGE_TREATMENT_COST":i.fields.treatment.condition.cost=t.payload;break;case"CHANGE_CANCER_ACTIVATOR":i.fields.cancer.activator=t.payload;break;case"CHANGE_CANCER_BENEFIT":i.fields.cancer.condition.benefit=t.payload;break;case"CHANGE_CANCER_COURSE":i.fields.cancer.condition.course=t.payload;break;case"CHANGE_CANCER_COST":i.fields.cancer.condition.cost=t.payload;break;case"UPDATE_CONDITIONS":a(i)}return n},Plan=Plan||{},Plan.redux=Plan.redux||{},Plan.redux.inherits=function(t,e){t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})},Plan.redux.EventEmitter=function(){this._handlers={}},Plan.redux.EventEmitter.prototype.subscribe=function(t,e){void 0===this._handlers[t]&&(this._handlers[t]=[]),this._handlers[t].push(e)},Plan.redux.EventEmitter.prototype.unsubscribe=function(t,e){for(var a=this._handlers[t]||[],n=0;n<a.length;n++){a[n]===e&&a.splice(n,1)}},Plan.redux.EventEmitter.prototype.emit=function(t,e){for(var a=this._handlers[t]||[],n=0;n<a.length;n++){a[n].call(this,e)}},Plan.redux.Store=function(t,e){this._handlers={},this.reducer=t,this.state=e},Plan.redux.inherits(Plan.redux.Store,Plan.redux.EventEmitter),Plan.redux.Store.prototype.dispatch=function(t){this.state=this.reducer.reduce(t,this.state),this.emit("CHANGE",this.state)},Plan.redux.Store.prototype.getState=function(){return this.state};